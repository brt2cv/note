{"root":{"data":{"text":"Python-Libs"},"children":[{"data":{"text":"第三方库","layout":null},"children":[{"data":{"text":"tqdm","layout":null}},{"data":{"text":"urllib3","layout":null}},{"data":{"text":"requests","layout":null}}]},{"data":{"text":"深度学习模型","layout":null},"children":[{"data":{"text":"OCR","layout":null},"children":[{"data":{"text":"PaddleOCR"},"children":[{"data":{"text":"ONNX & 解耦paddle","progress":1}}]},{"data":{"text":"OpenCV for Lite","progress":1}}]},{"data":{"text":"人脸识别\nFaceRecognize","layout":null},"children":[{"data":{"text":"MobileFaceNet","progress":9}},{"data":{"text":"InsightFace（ArcFace）","progress":1}}]},{"data":{"text":"人体姿态估计\nHuman pose estimation","layout":null},"children":[{"data":{"text":"MoveNet","background":"#ffc000","layout":null},"children":[{"data":{"text":"code","layout":null},"children":[{"data":{"text":"tfjs: github","layout":null}},{"data":{"text":"Raspi: demo","hyperlink":"https://github.com/tensorflow/examples/tree/master/lite/examples/pose_estimation/raspberry_pi","hyperlinkTitle":"","layout":null}},{"data":{"text":"Android: demo","hyperlink":"https://github.com/tensorflow/examples/tree/master/lite/examples/pose_estimation/android","hyperlinkTitle":"","layout":null}}]},{"data":{"text":"模型分类","layout":null},"children":[{"data":{"text":"PoseNet","layout":null}},{"data":{"text":"Lightning","font-weight":"bold","layout":null}},{"data":{"text":"Thunder","font-weight":"bold","layout":null}}]},{"data":{"text":"教程: MoveNet 姿态估计，树莓派上也能跑！","hyperlink":"https://blog.csdn.net/moxibingdao/article/details/120245810","hyperlinkTitle":"","layout":null}}]},{"data":{"text":"microsoft: \nSimple Baselines","layout":null},"children":[{"data":{"text":"github: 微软官方基于pytorch实现","hyperlink":"https://github.com/microsoft/human-pose-estimation.pytorch","hyperlinkTitle":""}},{"data":{"text":"paddle","layout":null},"children":[{"data":{"text":"github: PaddleCV/human_pose_estimation","hyperlink":"https://github.com/PaddlePaddle/models/tree/develop/PaddleCV/human_pose_estimation","hyperlinkTitle":"","layout":null},"children":[{"data":{"text":"论文：Simple Baselines for Human Pose Estimation and Tracking","hyperlink":"https://arxiv.org/abs/1804.06208","hyperlinkTitle":"","layout":null}},{"data":{"text":"Backbone：Simple Baselines","layout":null}},{"data":{"text":"教程: PaddleCV官方人体姿态估计预训练模型转ONNX","hyperlink":"https://blog.csdn.net/a2824256/article/details/118928542","hyperlinkTitle":"","layout":null}}]},{"data":{"text":"基于PaddleHub","layout":null},"children":[{"data":{"text":"code: demo","layout":null}},{"data":{"text":"小项目: 飞桨PaddleHub实现皮影戏","hyperlink":"https://blog.csdn.net/weixin_43824194/article/details/116463977","hyperlinkTitle":"","layout":null}}]}]}]},{"data":{"text":"OpenPose:\nRealtime Multi-Person Pose Estimation","expandState":"expand"},"children":[{"data":{"text":"github: demo","hyperlink":"https://github.com/ZheC/Realtime_Multi-Person_Pose_Estimation","hyperlinkTitle":"","image":"https://github.com/ZheC/Multi-Person-Pose-Estimation/raw/master/readme/dance.gif","imageTitle":"","imageSize":{"width":200,"height":112}},"children":[{"data":{"text":"C++"}},{"data":{"text":"tensorflow"}},{"data":{"text":"pytorch"}},{"data":{"text":"caffe2"}},{"data":{"text":"mxnet"}},{"data":{"text":"..."}}]},{"data":{"text":"pytorch-openpose: github\nBody and Hand Pose Estimation","hyperlink":"https://github.com/Hzzone/pytorch-openpose","hyperlinkTitle":""},"children":[{"data":{"text":"从官方视频看，对多人体识别准确度不高"}},{"data":{"text":"模型来源于openpose项目，转换器：caffemodel2pytorch"}}]}]},{"data":{"text":"AlphaPose"},"children":[{"data":{"text":"github: code","image":"https://github.com/MVIG-SJTU/AlphaPose/raw/master/docs/posetrack2.gif","imageTitle":"","imageSize":{"width":200,"height":116}},"children":[{"data":{"text":"对比了OpenPose/Detectron，效果更优"}},{"data":{"text":"号称：\nfirst open-source system that achieves 70+ mAP (75 mAP) on COCO dataset \nand 80+ mAP (82.1 mAP) on MPII dataset"}}]}]},{"data":{"text":"HRNet","expandState":"expand"},"children":[{"data":{"text":"https://github.com/leoxiaobin/deep-high-resolution-net.pytorch","expandState":"expand"}},{"data":{"text":"https://github.com/HRNet/HRNet-Human-Pose-Estimation"}},{"data":{"text":"DEKR","hyperlink":"https://github.com/HRNet/DEKR","hyperlinkTitle":""}}]},{"data":{"text":"openvinotoolkit"},"children":[{"data":{"text":"open_model_zoo"},"children":[{"data":{"text":"Create human_pose_estimation_2d_demo.py","hyperlink":"https://github.com/openvinotoolkit/open_model_zoo/pull/1454","hyperlinkTitle":""}}]}]}]}]},{"data":{"text":"StdLib","layout":null},"children":[{"data":{"text":"高阶函数","background":"#ffc000","layout":null},"children":[{"data":{"text":"map(func, list) -> iter","layout":null}},{"data":{"text":"reduce(f, [x1, x2, x3, x4]) = f(f(f(x1, x2), x3), x4)","layout":null}},{"data":{"text":"filter(is_palindrome, range(100))","note":"和map()不同的是，filter()把传入的函数依次作用于每个元素，然后根据返回值是True还是False决定保留还是丢弃该元素。","layout":null}}]},{"data":{"text":"urllib","hyperlink":"https://blog.csdn.net/qq_42415326/article/details/90794150","hyperlinkTitle":"","expandState":"collapse","layout":null},"children":[{"data":{"text":"request","layout":null},"children":[{"data":{"text":"urlopen()","note":"urlopen返回对象，提供方法：\n\n- read() , readline() ,readlines() , fileno() , close() ：对HTTPResponse类型数据进行操作\n- info()：返回HTTPMessage对象，表示远程服务器返回的头信息\n- getcode()：返回Http状态码。如果是http请求，200请求成功完成 ; 404网址未找到\n- geturl()：返回请求的url","layout":null},"children":[{"data":{"text":"发送简单的GET请求","layout":null}},{"data":{"text":"发送简单的POST请求","layout":null}},{"data":{"text":"复杂的请求：添加请求头","layout":null}},{"data":{"text":"返回值：urllib.response","font-weight":"bold","layout":null},"children":[{"data":{"text":"read() , readline() ,readlines() , fileno() , close()","layout":null}},{"data":{"text":"info()：返回HTTPMessage对象，表示远程服务器返回的头信息","layout":null}},{"data":{"text":"getcode()：返回Http状态码","layout":null}},{"data":{"text":"geturl()：返回请求的url","layout":null}}]}]},{"data":{"text":"urlretrieve(): 将资源下载到本地","layout":null}},{"data":{"text":"代理IP: request.build_opener(proxies)  ","layout":null}},{"data":{"text":"复杂的请求—cookies","layout":null}},{"data":{"text":"复杂的请求—证书验证","layout":null}}]},{"data":{"text":"error","layout":null},"children":[{"data":{"text":"属性","expandState":"expand","layout":null},"children":[{"data":{"text":"code：请求的状态码","layout":null}},{"data":{"text":"reason：错误的原因","layout":null}},{"data":{"text":"headers：响应的报头","layout":null}}]}]},{"data":{"text":"parse","layout":null},"children":[{"data":{"text":"urllib.parse.quote(url)：（URL编码处理）主要对URL中的非ASCII码编码处理","layout":null}},{"data":{"text":"urllib.parse.unquote(url)：（URL解码处理）URL上的特殊字符还原","layout":null}},{"data":{"text":"urllib.parse.urlencode：对请求数据data进行格式转换","layout":null}}]},{"data":{"text":"robotparser","layout":null}}]},{"data":{"text":"urllib3","layout":null}},{"data":{"text":"io","layout":null},"children":[{"data":{"text":"BytesIO()","layout":null},"children":[{"data":{"text":"getvalue(): bytes","layout":null}}]}]},{"data":{"text":"uuid","layout":null},"children":[{"data":{"text":"uuid.uuid1(): 基于MAC地址，时间戳，随机数生成\n额，会暴露mac地址...","layout":null}},{"data":{"text":"uuid.uuid4(): 通过伪随机数得到uuid，是有一定概率重复的","layout":null}},{"data":{"text":"uuid.uuid3(namespace,name)","layout":null}},{"data":{"text":"uuid.uuid5(namespace,name)\n和uuid3基本相同，只不过采用的散列算法是sha1","layout":null}}]}]}]},"template":"default","theme":"fresh-blue","version":"1.4.43"}